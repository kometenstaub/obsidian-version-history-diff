# From: https://github.com/argenos/nldates-obsidian/blob/master/.github/workflows/release.yml
name: Build Sync version history plugin

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - '*' # Push events to matching any tag format, i.e. 1.0, 20.15.10

env:
  PLUGIN_NAME: sync-version-history # Change this to the name of your plugin-id folder

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16.13.0' # You might need to adjust this value to your own version
    - name: Build
      id: build
      run: | 
        npm install
        npm run build --if-present
        mkdir ${{ env.PLUGIN_NAME }}
        cp build/main.js build/manifest.json build/styles.css ${{ env.PLUGIN_NAME }}
        zip -r ${{ env.PLUGIN_NAME }}.zip ${{ env.PLUGIN_NAME }}
        ls
        git config user.name "kometenstaub"
        git config user.email "83140328+kometenstaub@users.noreply.github.com"
        npx rexreplace "^.*?#(#+\s\[.*?\n.*?)(?=\s*#+\s\[)" "_" -s -M -G -m -o "CHANGELOG.md" > CHANGELOG-LATEST.md
#        echo "::set-output name=tag_name::$(git tag --sort version:refname | tail -n 1)"
    - name: Tag name
      id: tag-name
      run: echo "tag_name=$(git tag --sort version:refname | tail -n 1)" >> $GITHUB_OUTPUT
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VERSION: ${{ github.ref }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        body_path: CHANGELOG-LATEST.md
        draft: false
        prerelease: false
    - name: Upload zip file
      id: upload-zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./${{ env.PLUGIN_NAME }}.zip 
        asset_name: ${{ env.PLUGIN_NAME }}-${{ steps.tag-name.outputs.tag_name }}.zip
        asset_content_type: application/zip
    - name: Upload main.js
      id: upload-main
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: build/main.js
        asset_name: main.js
        asset_content_type: text/javascript
    - name: Upload manifest.json
      id: upload-manifest
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: build/manifest.json
        asset_name: manifest.json
        asset_content_type: application/json
    - name: Upload styles.css
      id: upload-css
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/styles.css
        asset_name: styles.css
        asset_content_type: text/css
